(function() {var implementors = {};
implementors["dtls"] = [{"text":"impl From&lt;u16&gt; for CipherSuiteID","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for ClientCertificateType","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for CompressionMethodId","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for ContentType","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for NamedCurve","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for EllipticCurveType","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for SRTPProtectionProfile","synthetic":false,"types":[]},{"text":"impl From&lt;u16&gt; for ExtensionValue","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for HandshakeType","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for HashAlgorithm","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for SignatureAlgorithm","synthetic":false,"types":[]}];
implementors["rtcp"] = [{"text":"impl From&lt;u8&gt; for PacketType","synthetic":false,"types":[]},{"text":"impl From&lt;u8&gt; for SDESType","synthetic":false,"types":[]}];
implementors["util"] = [{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;ParseIntError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;ParseError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;FromUtf8Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;SystemTimeError&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; From&lt;SendError&lt;T&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;InvalidKeyLength&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;InvalidKeyIvLength&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;BlockModeError&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;Err&lt;X509Error&gt;&gt; for Error","synthetic":false,"types":[]},{"text":"impl From&lt;X509Error&gt; for Error","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()